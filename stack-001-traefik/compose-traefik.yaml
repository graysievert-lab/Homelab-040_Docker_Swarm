############################
# Network must be created first 
#  docker network create -d overlay traefik
############################

services:
  traefik:
    image: traefik:v3.1
    restart: always
    networks:
      - traefik
    ports: 	# force Traefik listen to the ports directly, not through ingress
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    # Additional security hardening
    read_only: true
    security_opt:
      - no-new-privileges=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # docker socket
      - ./traefik.yaml:/traefik.yaml:ro              # static config (RO mode)
      - ./config:/config:ro                          # Dynamic config file provider directory (RO mode)
      - acme_data:/acme:rw                           # acme resolver cache volume
      - ./logs:/logs:rw                              # logs directory
      - /etc/pki/ca-trust/source/anchors/localCA.crt:/localCA.crt:ro  # local trust anchor 
    secrets:
      - RFC2136_TSIG_KEY
      - RFC2136_TSIG_SECRET
    environment:
      - LEGO_CA_CERTIFICATES=/localCA.crt # Tells LEGO to use this trust anchor during connection to private ACME CA
      # - LEGO_CA_SERVERNAME=acme.lan # Tells LEGO to ensure ACME CA server has this hostname.
      - RFC2136_NAMESERVER=ns1.lan # It is important NOT to use quotes!
      - RFC2136_TSIG_ALGORITHM=hmac-sha256. # Trailing dot is necessary
      - RFC2136_TSIG_KEY_FILE=/var/run/secrets/RFC2136_TSIG_KEY       # check https://go-acme.github.io/lego/dns/rfc2136/
      - RFC2136_TSIG_SECRET_FILE=/var/run/secrets/RFC2136_TSIG_SECRET
      # 
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
      # service's ports discovery
        - traefik.http.services.traefik_p_443.loadbalancer.server.port=443
      # Configure middleware "Authentik"
        - "traefik.http.middlewares.authentik.forwardauth.address=https://aegis.lan/outpost.goauthentik.io/auth/traefik"
        - "traefik.http.middlewares.authentik.forwardauth.tls.ca=/localCA.crt"
        - "traefik.http.middlewares.authentik.forwardauth.trustForwardHeader=true"
        - "traefik.http.middlewares.authentik.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version"
      # Confugure https router "dashboard"
        - "traefik.http.routers.dashboard.entrypoints=https"
        - "traefik.http.routers.dashboard.rule=Host(`traefik.swarm.lan`)"
        - "traefik.http.routers.dashboard.middlewares=authentik"
        - "traefik.http.routers.dashboard.service=api@internal"
        # - "traefik.http.routers.dashboard.tls.certresolver=homelab-alpn"   
        - "traefik.http.routers.dashboard.tls.certresolver=homelab-dns"
        - "traefik.http.routers.dashboard.tls.domains[0].main=swarm.lan"     #  Default certificate
        - "traefik.http.routers.dashboard.tls.domains[0].sans=*.swarm.lan"   #  to cover 404 pages and "forgotten" certresolver labels
      # Confugure http router "metrics"
        - "traefik.http.routers.metrics.entrypoints=https"
        - "traefik.http.routers.metrics.rule=Host(`traefik.swarm.lan`) && PathPrefix(`/metrics`)"
        - "traefik.http.routers.metrics.service=prometheus@internal"


  # whoami: # Test container that shows its IP, hostname, and request info
  #   image: traefik/whoami
  #   networks:
  #     - traefik
  #   deploy:
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.services.whoami_p_80.loadbalancer.server.port=80"
  #       - "traefik.http.routers.whoami.entrypoints=https"        
  #       - "traefik.http.routers.whoami.rule=Host(`whoami.swarm.lan`)"
  #       - "traefik.http.routers.whoami.tls.certresolver=homelab-alpn"

volumes:
  acme_data:
networks:
  traefik:
    external: true
secrets:  
  RFC2136_TSIG_KEY:
    external: true
  RFC2136_TSIG_SECRET:
    external: true
